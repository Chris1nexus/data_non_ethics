import sys
import zipfile
from zipfile import ZipFile
import os
import shutil

def write_rec(zipObj, prevpath, directory):
     curr_dir_path = os.path.join(prevpath, directory)
     N = len(curr_dir_path)
     for folderName, subfolders, filenames in os.walk(curr_dir_path):
         for filename in filenames:
             filePath = os.path.join(folderName, filename)
             zipObj.write(filePath, filePath[N:])

print("PwRemover\ninsert mode :\n\t folder : clean all pptx presentations in a given source folder\n\t file : clean only the given pptx presentation\n")
mode = input()
if mode is not None and mode == 'folder':
    print("insert path of the folder containing the pptx presentations")
    src = input()
    print("insert destination folder path")
    dst = input()

    if not os.path.isdir(src):
        print("error - source must be an existing directory")
    else:
        if not os.path.exists(dst):
            os.makedirs(dst)
        src_len = len(src)

        for folderName, subfolders, filenames in os.walk(src):
            for filename in filenames:
                if filename.endswith(".pptx"):
                    dest_folder = os.path.join(dst, filename + "_folder")
                    filePath = os.path.join(src, filename)
                    with zipfile.ZipFile(filePath, "r") as zip_ref:
                        zip_ref.extractall(dest_folder)
                    core_content = []
                    pres_properties_file = os.path.join( os.path.join( os.path.join(dst, filename + "_folder"), "ppt"), "presentation.xml")
                    with open(pres_properties_file, "r") as pres_file:
                        for line in pres_file:
                            core_content.append(line)
                    content = ''.join(core_content)
                    final_index = content.rfind("</p:defaultTextStyle>")
                    presentation_file_content = content[:final_index] + "</p:defaultTextStyle></p:presentation>"
                    with open(pres_properties_file, "w+") as pres_file:
                        pres_file.write(presentation_file_content)

                    last_index_of_extension = filename.rfind(".pptx")
                    final_presentation_name = os.path.join(dst, filename[:last_index_of_extension] +  "_clean.pptx")
                    with ZipFile( final_presentation_name, 'w') as zipObj:
                       write_rec(zipObj, dst, filename + "_folder" )
                    shutil.rmtree(dest_folder)
            break
        print("Completed\n")
elif mode is not None and mode == 'file':
    print("insert file path (result will be stored in that location)\n")
    presentationName = input()

    with zipfile.ZipFile(presentationName, "r") as zip_ref:
        zip_ref.extractall(presentationName + "_folder")
    core_content = []
    pres_file_path = os.path.join(os.path.join(os.path.join(presentationName + "_folder"), "ppt"), "presentation.xml")
    with open(pres_file_path, "r") as pres_file:
        for line in pres_file:
            core_content.append(line)
    content = ''.join(core_content)
    final_index = content.rfind("</p:defaultTextStyle>")
    presentation_file_content = content[:final_index] + "</p:defaultTextStyle></p:presentation>"
    with open(pres_file_path, "w+") as pres_file:
        pres_file.write(presentation_file_content)

    last_index_of_extension = presentationName.rfind(".pptx")
    final_presentation_name = presentationName[:last_index_of_extension] +  "_clean.pptx"
    with ZipFile( final_presentation_name, 'w') as zipObj:
       write_rec(zipObj, ".", presentationName + "_folder" )
    shutil.rmtree(presentationName + "_folder")
    print("Completed\n")
else:
    print("error")
